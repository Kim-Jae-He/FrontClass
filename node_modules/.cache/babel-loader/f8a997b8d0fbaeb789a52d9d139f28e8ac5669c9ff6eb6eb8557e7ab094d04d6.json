{"ast":null,"code":"var _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport { useContext, useEffect } from \"react\";\nimport { UserContext } from \"../App\";\nimport { useNavigate } from \"react-router-dom\";\n\n// accessToken이 있는지 없는지 검사하는 훅함수\nexport const useAuth = () => {\n  _s();\n  const {\n    accessToken,\n    setAccessToken\n  } = useContext(UserContext);\n  const navigate = useNavigate();\n  useEffect(() => {\n    //1. 로그인이 안된 상태 localStorage의 accessToken null, \n    //    전역 상태변수 accessToken null\n    if (localStorage.getItem('accessToken') === null) {\n      alert('로그인이 필요한 페이지 입니다!');\n      navigate('/login', {\n        replace: true\n      });\n      return;\n    }\n\n    // 2. 로그인은 되었으나 새로고침한 상태 accessToken 있음,\n    //    전역 상태변수 accessToken null\n    if (accessToken === null) {\n      setAccessToken(localStorage.getItem('accessToken'));\n      return;\n    }\n\n    // 3. 로그인 되었고, 새로고침도 안함\n    // localStorage accessToken 있음,\n    //  전역 상태변수 accessToken 있음\n  }, [accessToken, setAccessToken, navigate]);\n};\n\n// 페이지 이동을 위한 hook 함수\n_s(useAuth, \"CeAuar3Gyr3oUfuCs/ghjifHalA=\", false, function () {\n  return [useNavigate];\n});\nexport const useMove = dir => {\n  _s2();\n  const navigate = useNavigate();\n  return () => {\n    navigate(dir);\n  };\n};\n\n// 페이지 이동인데 뒤로가기 못하게 이동하는 hook함수\n_s2(useMove, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\nexport const useReplace = dir => {\n  _s3();\n  const navigate = useNavigate();\n  navigate(dir, {\n    replace: true\n  });\n};\n_s3(useReplace, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});","map":{"version":3,"names":["useContext","useEffect","UserContext","useNavigate","useAuth","_s","accessToken","setAccessToken","navigate","localStorage","getItem","alert","replace","useMove","dir","_s2","useReplace","_s3"],"sources":["C:/Users/TED/Desktop/FrontClass/resource/react/test/src/hooks/hooks.js"],"sourcesContent":["import {useContext, useEffect } from \"react\";\r\nimport {UserContext} from \"../App\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\n// accessToken이 있는지 없는지 검사하는 훅함수\r\nexport const useAuth = ()=>{\r\n  const {accessToken, setAccessToken} = useContext(UserContext);\r\n  const navigate = useNavigate();\r\n  useEffect(()=>{\r\n    //1. 로그인이 안된 상태 localStorage의 accessToken null, \r\n    //    전역 상태변수 accessToken null\r\n    if(localStorage.getItem('accessToken') === null){\r\n      alert('로그인이 필요한 페이지 입니다!');\r\n      navigate('/login', {replace : true});\r\n      return;\r\n    }\r\n\r\n    // 2. 로그인은 되었으나 새로고침한 상태 accessToken 있음,\r\n    //    전역 상태변수 accessToken null\r\n    if(accessToken === null){\r\n      setAccessToken(localStorage.getItem('accessToken'));\r\n      return;\r\n    }\r\n\r\n    // 3. 로그인 되었고, 새로고침도 안함\r\n    // localStorage accessToken 있음,\r\n    //  전역 상태변수 accessToken 있음\r\n\r\n  }, [accessToken, setAccessToken, navigate]);\r\n}\r\n\r\n\r\n// 페이지 이동을 위한 hook 함수\r\nexport const useMove = (dir)=>{\r\n  const navigate = useNavigate();\r\n  return ()=>{navigate(dir)}\r\n}\r\n\r\n// 페이지 이동인데 뒤로가기 못하게 이동하는 hook함수\r\nexport const useReplace = (dir)=>{\r\n  const navigate = useNavigate();\r\n  navigate(dir, {replace : true});\r\n}"],"mappings":";;;AAAA,SAAQA,UAAU,EAAEC,SAAS,QAAQ,OAAO;AAC5C,SAAQC,WAAW,QAAO,QAAQ;AAClC,SAASC,WAAW,QAAQ,kBAAkB;;AAE9C;AACA,OAAO,MAAMC,OAAO,GAAGA,CAAA,KAAI;EAAAC,EAAA;EACzB,MAAM;IAACC,WAAW;IAAEC;EAAc,CAAC,GAAGP,UAAU,CAACE,WAAW,CAAC;EAC7D,MAAMM,QAAQ,GAAGL,WAAW,CAAC,CAAC;EAC9BF,SAAS,CAAC,MAAI;IACZ;IACA;IACA,IAAGQ,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC,KAAK,IAAI,EAAC;MAC9CC,KAAK,CAAC,mBAAmB,CAAC;MAC1BH,QAAQ,CAAC,QAAQ,EAAE;QAACI,OAAO,EAAG;MAAI,CAAC,CAAC;MACpC;IACF;;IAEA;IACA;IACA,IAAGN,WAAW,KAAK,IAAI,EAAC;MACtBC,cAAc,CAACE,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC,CAAC;MACnD;IACF;;IAEA;IACA;IACA;EAEF,CAAC,EAAE,CAACJ,WAAW,EAAEC,cAAc,EAAEC,QAAQ,CAAC,CAAC;AAC7C,CAAC;;AAGD;AAAAH,EAAA,CA3BaD,OAAO;EAAA,QAEDD,WAAW;AAAA;AA0B9B,OAAO,MAAMU,OAAO,GAAIC,GAAG,IAAG;EAAAC,GAAA;EAC5B,MAAMP,QAAQ,GAAGL,WAAW,CAAC,CAAC;EAC9B,OAAO,MAAI;IAACK,QAAQ,CAACM,GAAG,CAAC;EAAA,CAAC;AAC5B,CAAC;;AAED;AAAAC,GAAA,CALaF,OAAO;EAAA,QACDV,WAAW;AAAA;AAK9B,OAAO,MAAMa,UAAU,GAAIF,GAAG,IAAG;EAAAG,GAAA;EAC/B,MAAMT,QAAQ,GAAGL,WAAW,CAAC,CAAC;EAC9BK,QAAQ,CAACM,GAAG,EAAE;IAACF,OAAO,EAAG;EAAI,CAAC,CAAC;AACjC,CAAC;AAAAK,GAAA,CAHYD,UAAU;EAAA,QACJb,WAAW;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}