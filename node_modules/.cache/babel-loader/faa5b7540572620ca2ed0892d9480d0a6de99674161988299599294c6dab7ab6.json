{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\TED\\\\Desktop\\\\FrontClass\\\\resource\\\\react\\\\test\\\\src\\\\day11\\\\vali.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ValidateTest = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [pwErrMsg, setPwErrMsg] = useState('');\n  const [emailErrMsg, setEmailErrMsg] = useState('');\n  const onJoin = e => {\n    e.preventDefault();\n    console.log(email);\n    console.log(password);\n    if (email === '') {\n      setEmailErrMsg('이메일을 필수로 입력해주세요');\n    } else if (!email.includes('@')) {\n      setEmailErrMsg('이메일 형식을 지켜주세요');\n    } else {\n      setEmailErrMsg('');\n    }\n    if (password === '') {\n      setPwErrMsg('비밀번호를 필수적으로 입력해주세요');\n    } else if (password.length < 6) {\n      console.log('비밀번호가 6글자 미만입니다');\n      setPwErrMsg('비밀번호는 6글자 이상을 써주세요');\n    } else {\n      setPwErrMsg('');\n    }\n  };\n  const onEmailChage = e => {\n    console.log(e.target.value);\n    setEmail(e.target.value);\n  };\n  const onPwChange = e => {\n    setPassword(e.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uC720\\uD6A8\\uC131\\uAC80\\uC0AC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: onEmailChage,\n        id: \"email\",\n        name: \"email\",\n        type: \"text\",\n        placeholder: \"\\uC544\\uC774\\uB514\\uB97C \\uC785\\uB825\\uD558\\uC2DC\\uC624\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: emailErrMsg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: onPwChange,\n        id: \"password\",\n        name: \"password\",\n        type: \"password\",\n        placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\\uB97C \\uC785\\uB825\\uD558\\uC2DC\\uC624\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: pwErrMsg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onJoin,\n        children: \"\\uD68C\\uC6D0\\uAC00\\uC785\\uD558\\uAE30!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(ValidateTest, \"nmZNDjpJXmpY1LfiJHOoWt1oF38=\");\n_c = ValidateTest;\nexport default ValidateTest;\nvar _c;\n$RefreshReg$(_c, \"ValidateTest\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Fragment","_Fragment","ValidateTest","_s","email","setEmail","password","setPassword","pwErrMsg","setPwErrMsg","emailErrMsg","setEmailErrMsg","onJoin","e","preventDefault","console","log","includes","length","onEmailChage","target","value","onPwChange","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","id","name","type","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/TED/Desktop/FrontClass/resource/react/test/src/day11/vali.js"],"sourcesContent":["import { useState } from 'react';\r\n\r\nconst ValidateTest = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const [pwErrMsg, setPwErrMsg] = useState('');\r\n  const [emailErrMsg, setEmailErrMsg] = useState('');\r\n\r\n  const onJoin = (e) => {\r\n    e.preventDefault();\r\n    console.log(email);\r\n    console.log(password);\r\n    if (email === '') {\r\n      setEmailErrMsg('이메일을 필수로 입력해주세요');\r\n    } else if (!email.includes('@')) {\r\n      setEmailErrMsg('이메일 형식을 지켜주세요');\r\n    } else {\r\n      setEmailErrMsg('');\r\n    }\r\n\r\n    if (password === '') {\r\n      setPwErrMsg('비밀번호를 필수적으로 입력해주세요');\r\n    } else if (password.length < 6) {\r\n      console.log('비밀번호가 6글자 미만입니다');\r\n      setPwErrMsg('비밀번호는 6글자 이상을 써주세요');\r\n    } else {\r\n      setPwErrMsg('');\r\n    }\r\n  };\r\n\r\n  const onEmailChage = (e) => {\r\n    console.log(e.target.value);\r\n    setEmail(e.target.value);\r\n  };\r\n\r\n  const onPwChange = (e) => {\r\n    setPassword(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h1>유효성검사</h1>\r\n      <form>\r\n        <input\r\n          onChange={onEmailChage}\r\n          id=\"email\"\r\n          name=\"email\"\r\n          type=\"text\"\r\n          placeholder=\"아이디를 입력하시오\"\r\n        />\r\n        <p>{emailErrMsg}</p>\r\n        <input\r\n          onChange={onPwChange}\r\n          id=\"password\"\r\n          name=\"password\"\r\n          type=\"password\"\r\n          placeholder=\"비밀번호를 입력하시오\"\r\n        />\r\n        <p>{pwErrMsg}</p>\r\n        <button onClick={onJoin}>회원가입하기!</button>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ValidateTest;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}