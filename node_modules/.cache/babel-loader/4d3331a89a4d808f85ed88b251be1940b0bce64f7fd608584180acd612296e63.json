{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\TED\\\\Desktop\\\\FrontClass\\\\resource\\\\react\\\\test\\\\src\\\\components\\\\activity\\\\activitySection.js\",\n  _s = $RefreshSig$();\nimport { Pagination } from '@mui/material';\nimport { ActivityBody, ActivityFooter, ActivityInput, ActivitySectionHeader, ActivitySelect, ActivityWriteBtn } from '../../styles/dashboard/activity.styles';\nimport ActivityCard from './activityCard';\nimport { useContext, useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { debounce } from \"lodash\";\nimport { UserContext } from '../../App';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ActivitySection = () => {\n  _s();\n  const cntPerPage = 4;\n  const [activityList, setActivityList] = useState([]);\n  const [totalPage, setTotalPage] = useState(1);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [order, setOrder] = useState('dateDesc');\n  const [searchText, setSearchText] = useState('');\n  const {\n    accessToken\n  } = useContext(UserContext);\n  useEffect(() => {\n    let tmp = async () => {\n      try {\n        let res = await axios.get(`/api/activities?order=${order}&limit=${cntPerPage}&page=${currentPage}&q=${searchText}`);\n        //res.data.toatal_cnt --> 전체 게시물 갯수 --> 계산 총 필요한 페이지 갯수\n        // 전체게시물갯수   한페이지당게시물갯수    총페이지\n        //  10                  3                    4\n        //  10                  2                   5\n        // 총페이지 갯수 = 올림(전체게시물갯수 / 한페이지당게시물갯수)\n        setTotalPage(Math.ceil(res.data.total_cnt / cntPerPage));\n        setActivityList(res.data.activityList);\n      } catch (err) {\n        console.log(err);\n        alert('잠시 게시글을 불러오다 문제가 발생했습니다');\n      }\n    };\n    tmp();\n  }, [currentPage, order, searchText]);\n  const onPageChange = (e, value) => {\n    setCurrentPage(value);\n  };\n  const onOrderChange = e => {\n    // console.log(e.target.value)\n    setOrder(e.target.value);\n  };\n  const onSearchChange = debounce(e => {\n    setSearchText(e.target.value);\n  }, 500);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(ActivitySectionHeader, {\n      children: [/*#__PURE__*/_jsxDEV(ActivityInput, {\n        onChange: onSearchChange,\n        placeholder: \"\\uC81C\\uBAA9\\uC73C\\uB85C \\uAC80\\uC0C9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ActivitySelect, {\n        value: order,\n        onChange: onOrderChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"dateDesc\",\n          children: \"\\uCD5C\\uC2E0\\uC21C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"dateAsc\",\n          children: \"\\uC624\\uB798\\uB41C\\uC21C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"like\",\n          children: \"\\uC88B\\uC544\\uC694\\uC21C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"view\",\n          children: \"\\uC870\\uD68C\\uC218\\uC21C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ActivityWriteBtn, {\n        children: \"\\uAE00 \\uC4F0\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ActivityBody, {\n      children: activityList.map(el => /*#__PURE__*/_jsxDEV(ActivityCard, {\n        activity: el\n      }, el.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ActivityFooter, {\n      children: /*#__PURE__*/_jsxDEV(Pagination, {\n        onChange: onPageChange,\n        count: totalPage,\n        page: currentPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s(ActivitySection, \"wRgnFIUkQ6+3w7SXeSp1Rkhyns8=\");\n_c = ActivitySection;\nexport default ActivitySection;\nvar _c;\n$RefreshReg$(_c, \"ActivitySection\");","map":{"version":3,"names":["Pagination","ActivityBody","ActivityFooter","ActivityInput","ActivitySectionHeader","ActivitySelect","ActivityWriteBtn","ActivityCard","useContext","useEffect","useState","axios","debounce","UserContext","jsxDEV","_jsxDEV","ActivitySection","_s","cntPerPage","activityList","setActivityList","totalPage","setTotalPage","currentPage","setCurrentPage","order","setOrder","searchText","setSearchText","accessToken","tmp","res","get","Math","ceil","data","total_cnt","err","console","log","alert","onPageChange","e","value","onOrderChange","target","onSearchChange","children","onChange","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","map","el","activity","id","count","page","_c","$RefreshReg$"],"sources":["C:/Users/TED/Desktop/FrontClass/resource/react/test/src/components/activity/activitySection.js"],"sourcesContent":["import { Pagination } from '@mui/material';\r\nimport {\r\n  ActivityBody,\r\n  ActivityFooter,\r\n  ActivityInput,\r\n  ActivitySectionHeader,\r\n  ActivitySelect,\r\n  ActivityWriteBtn,\r\n} from '../../styles/dashboard/activity.styles';\r\nimport ActivityCard from './activityCard';\r\nimport { useContext, useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { debounce } from \"lodash\";\r\nimport { UserContext } from '../../App';\r\n\r\n\r\nconst ActivitySection = () => {\r\n  const cntPerPage = 4;\r\n  const [activityList, setActivityList] = useState([]);\r\n  const [totalPage, setTotalPage] = useState(1);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [order, setOrder] = useState('dateDesc');\r\n  const [searchText, setSearchText] = useState('');\r\n  const {accessToken} = useContext(UserContext);\r\n  useEffect(() => {\r\n    let tmp = async () => {\r\n      try {\r\n        let res = await axios.get(\r\n          `/api/activities?order=${order}&limit=${cntPerPage}&page=${currentPage}&q=${searchText}`,\r\n          \r\n        );\r\n        //res.data.toatal_cnt --> 전체 게시물 갯수 --> 계산 총 필요한 페이지 갯수\r\n        // 전체게시물갯수   한페이지당게시물갯수    총페이지\r\n        //  10                  3                    4\r\n        //  10                  2                   5\r\n        // 총페이지 갯수 = 올림(전체게시물갯수 / 한페이지당게시물갯수)\r\n        setTotalPage(Math.ceil(res.data.total_cnt / cntPerPage));\r\n        setActivityList(res.data.activityList);\r\n      } catch (err) {\r\n        console.log(err);\r\n        alert('잠시 게시글을 불러오다 문제가 발생했습니다');\r\n      }\r\n    };\r\n\r\n    tmp();\r\n  }, [currentPage, order, searchText]);\r\n\r\n  const onPageChange = (e, value) => {\r\n    setCurrentPage(value);\r\n  };\r\n\r\n  const onOrderChange = (e) => {\r\n    // console.log(e.target.value)\r\n    setOrder(e.target.value);\r\n  };\r\n\r\n  const onSearchChange = debounce((e) => {\r\n    setSearchText(e.target.value);\r\n  }, 500);\r\n\r\n  return (\r\n    <section>\r\n      <ActivitySectionHeader>\r\n        <ActivityInput \r\n        onChange ={onSearchChange} \r\n        placeholder=\"제목으로 검색\" />\r\n        <ActivitySelect value={order} onChange={onOrderChange}>\r\n          <option value=\"dateDesc\">최신순</option>\r\n          <option value=\"dateAsc\">오래된순</option>\r\n          <option value=\"like\">좋아요순</option>\r\n          <option value=\"view\">조회수순</option>\r\n        </ActivitySelect>\r\n        <ActivityWriteBtn>글 쓰기</ActivityWriteBtn>\r\n      </ActivitySectionHeader>\r\n      <ActivityBody>\r\n        {activityList.map((el) => (\r\n          <ActivityCard key={el.id} activity={el} />\r\n        ))}\r\n      </ActivityBody>\r\n      <ActivityFooter>\r\n        <Pagination onChange={onPageChange} count={totalPage} page={currentPage} />\r\n      </ActivityFooter>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default ActivitySection;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}