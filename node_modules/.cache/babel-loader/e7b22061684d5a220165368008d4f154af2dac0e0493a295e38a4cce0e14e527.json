{"ast":null,"code":"/* // import Kim from '../src/day01/d01MyComponent';\n// import Test from './day02/d01export';\n// import Inline from './day02/d03illine';\n// import CssFile from './day02/d04cssfile';\n// import './day02/d05cssfile.css';\n// import EmotionComponent from '../src/day03/do1emotion';\n// import RouterPage from './day03/d02router';\n// import ErrorPage from './day03/d03err';\n// import DashboardPage from './dashboard/dashboard';\n// import ConditionalPage from './day05/01conditional';\n// import StagePage from './day06/d01state';\n// import UseEffectPage from './day08/d01useEffect';\nimport logo from './logo.svg';\nimport './App.css';\nimport {\n  BrowserRouter,\n  Route,\n  RouterProvider,\n  Routes,\n  createBrowserRouter,\n} from 'react-router-dom';\n\n// axios 추가\nimport axios from 'axios';\nimport JoinPage from './pages/auth/join';\nimport LoginPage from './pages/auth/login';\nimport IndexPages from './pages';\nimport ErrPages from './pages/404';\nimport ValidateTest from './day11/vali';\n\nlet router = createBrowserRouter([\n  // { path: '/abc', element: <EmotionComponent /> },\n  // { path: '/bbb', element: <RouterPage /> },\n  // { path: '/dashboard', element: <DashboardPage /> },\n  // { path: '/', element: <ConditionalPage /> },\n  // { path: '/state', element: <StagePage /> },\n  // { path: '/useEffectPage', element: <UseEffectPage /> },\n  { path: '/', element: <IndexPages /> },\n  { path: '/join', element: <JoinPage /> },\n  { path: '/login', element: <LoginPage /> },\n  { path: '/login', element: <LoginPage /> },\n  { path: '/vali', element: <ValidateTest /> },\n]);\n\nconst App = () => {\n  return <RouterProvider router={router} />;\n};\n\n/* function App() {\n  return (\n    <BrowserRouter>\n      <Routes>\n        <Route errorElement={<ErrorPage />} path=\"/\" element={<Kim />} />\n        <Route path=\"/abc\" element={<EmotionComponent />} />\n        <Route path=\"/bbb\" element={<RouterPage />} />\n      </Routes>\n    </BrowserRouter>\n  );\n} */\n\nconst express = require('express');\nconst bodyParser = require('body-parser');\nconst app = express();\nconst mysql = require('mysql2');\nconst port = 3002;\napp.use(express.json());\nconst pool = mysql.createPool({\n  host: 'localhost',\n  database: 'board23',\n  user: 'kim',\n  password: '12345678',\n  port: 3306\n});\napp.get('/', (req, res) => {\n  pool.query('SELECT * FROM tbl_tmp', (err, results, fields) => {\n    console.log(results);\n    console.log(fields);\n    console(err);\n    res.end();\n  });\n});\napp.post('/apr/users', (req, res) => {\n  console.log();\n});\napp.listen(port, () => {\n  console.log(`app listening on port ${port}`);\n});\nexport default App;","map":{"version":3,"names":["express","require","bodyParser","app","mysql","port","use","json","pool","createPool","host","database","user","password","get","req","res","query","err","results","fields","console","log","end","post","listen","App"],"sources":["C:/Users/TED/Desktop/FrontClass/resource/react/test/src/App.js"],"sourcesContent":["/* // import Kim from '../src/day01/d01MyComponent';\n// import Test from './day02/d01export';\n// import Inline from './day02/d03illine';\n// import CssFile from './day02/d04cssfile';\n// import './day02/d05cssfile.css';\n// import EmotionComponent from '../src/day03/do1emotion';\n// import RouterPage from './day03/d02router';\n// import ErrorPage from './day03/d03err';\n// import DashboardPage from './dashboard/dashboard';\n// import ConditionalPage from './day05/01conditional';\n// import StagePage from './day06/d01state';\n// import UseEffectPage from './day08/d01useEffect';\nimport logo from './logo.svg';\nimport './App.css';\nimport {\n  BrowserRouter,\n  Route,\n  RouterProvider,\n  Routes,\n  createBrowserRouter,\n} from 'react-router-dom';\n\n// axios 추가\nimport axios from 'axios';\nimport JoinPage from './pages/auth/join';\nimport LoginPage from './pages/auth/login';\nimport IndexPages from './pages';\nimport ErrPages from './pages/404';\nimport ValidateTest from './day11/vali';\n\nlet router = createBrowserRouter([\n  // { path: '/abc', element: <EmotionComponent /> },\n  // { path: '/bbb', element: <RouterPage /> },\n  // { path: '/dashboard', element: <DashboardPage /> },\n  // { path: '/', element: <ConditionalPage /> },\n  // { path: '/state', element: <StagePage /> },\n  // { path: '/useEffectPage', element: <UseEffectPage /> },\n  { path: '/', element: <IndexPages /> },\n  { path: '/join', element: <JoinPage /> },\n  { path: '/login', element: <LoginPage /> },\n  { path: '/login', element: <LoginPage /> },\n  { path: '/vali', element: <ValidateTest /> },\n]);\n\nconst App = () => {\n  return <RouterProvider router={router} />;\n};\n\n/* function App() {\n  return (\n    <BrowserRouter>\n      <Routes>\n        <Route errorElement={<ErrorPage />} path=\"/\" element={<Kim />} />\n        <Route path=\"/abc\" element={<EmotionComponent />} />\n        <Route path=\"/bbb\" element={<RouterPage />} />\n      </Routes>\n    </BrowserRouter>\n  );\n} */\n\nconst express = require('express');\nconst bodyParser = require('body-parser');\nconst app = express();\nconst mysql = require('mysql2');\nconst port = 3002;\napp.use(express.json());\n\nconst pool = mysql.createPool({\n  host: 'localhost',\n  database: 'board23',\n  user: 'kim',\n  password: '12345678',\n  port: 3306,\n});\n\napp.get('/', (req, res) => {\n  pool.query('SELECT * FROM tbl_tmp', (err, results, fields) => {\n    console.log(results);\n    console.log(fields);\n    console(err);\n    res.end();\n  });\n});\n\napp.post('/apr/users', (req, res) => {\n  console.log();\n});\n\napp.listen(port, () => {\n  console.log(`app listening on port ${port}`);\n});\n\nexport default App;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAS,CAAC;AAClC,MAAMC,UAAU,GAAGD,OAAO,CAAC,aAAa,CAAC;AACzC,MAAME,GAAG,GAAGH,OAAO,CAAC,CAAC;AACrB,MAAMI,KAAK,GAAGH,OAAO,CAAC,QAAQ,CAAC;AAC/B,MAAMI,IAAI,GAAG,IAAI;AACjBF,GAAG,CAACG,GAAG,CAACN,OAAO,CAACO,IAAI,CAAC,CAAC,CAAC;AAEvB,MAAMC,IAAI,GAAGJ,KAAK,CAACK,UAAU,CAAC;EAC5BC,IAAI,EAAE,WAAW;EACjBC,QAAQ,EAAE,SAAS;EACnBC,IAAI,EAAE,KAAK;EACXC,QAAQ,EAAE,UAAU;EACpBR,IAAI,EAAE;AACR,CAAC,CAAC;AAEFF,GAAG,CAACW,GAAG,CAAC,GAAG,EAAE,CAACC,GAAG,EAAEC,GAAG,KAAK;EACzBR,IAAI,CAACS,KAAK,CAAC,uBAAuB,EAAE,CAACC,GAAG,EAAEC,OAAO,EAAEC,MAAM,KAAK;IAC5DC,OAAO,CAACC,GAAG,CAACH,OAAO,CAAC;IACpBE,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;IACnBC,OAAO,CAACH,GAAG,CAAC;IACZF,GAAG,CAACO,GAAG,CAAC,CAAC;EACX,CAAC,CAAC;AACJ,CAAC,CAAC;AAEFpB,GAAG,CAACqB,IAAI,CAAC,YAAY,EAAE,CAACT,GAAG,EAAEC,GAAG,KAAK;EACnCK,OAAO,CAACC,GAAG,CAAC,CAAC;AACf,CAAC,CAAC;AAEFnB,GAAG,CAACsB,MAAM,CAACpB,IAAI,EAAE,MAAM;EACrBgB,OAAO,CAACC,GAAG,CAAE,yBAAwBjB,IAAK,EAAC,CAAC;AAC9C,CAAC,CAAC;AAEF,eAAeqB,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}