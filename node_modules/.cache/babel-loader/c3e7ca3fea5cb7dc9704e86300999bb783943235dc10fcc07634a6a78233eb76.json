{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\TED\\\\Desktop\\\\FrontClass\\\\resource\\\\react\\\\test\\\\src\\\\components\\\\career\\\\careerRow.js\",\n  _s = $RefreshSig$();\nimport DeleteOutlineIcon from '@mui/icons-material/DeleteOutline';\nimport EditIcon from '@mui/icons-material/Edit';\nimport { useRef, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CareerRow = props => {\n  _s();\n  // 만일 isEdit에 true가 들어있으면 해당 행이 수정 상태임 을 의미하고\n  // isEdit에 false가 들어있으면 해당 행이 수정상태가 아님 을 의미한다\n  const [isEdit, setIsEdit] = useState(false);\n  const dateFormat = date => {\n    // '2023년10월01일' --> '2023-10-01'\n    // / /g --> 모든 띄어쓰기 공백 을 의미\n    return date.replace('년', '-').replace('월', '-').replace('일', '').replace(/ /g, '');\n  };\n\n  // props.career = e;\n  // props.checkedRowId\n  const e = props.career;\n  const {\n    checkedRowId,\n    onSelect,\n    onDeleteRow\n  } = props;\n\n  // 상태를 수정상태로 변경해주는 함수\n  const onEditState = () => {\n    setIsEdit(true);\n  };\n  const companyInputRef = useRef();\n  const positionInputRef = useRef();\n  const startDateInputRef = useRef();\n  const endDateInputRef = useRef();\n  const onEditClick = () => {\n    const company = companyInputRef.current.valeue;\n    const position = positionInputRef.current.valeue;\n    const startDate = startDateInputRef.current.valeue;\n    const endDate = endDateInputRef.current.valeue;\n    if (company === '') {\n      alert('dsf');\n      return;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: checkedRowId.includes(e.id),\n        onChange: () => {\n          onSelect(e.id);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      onClick: onEditState,\n      children: isEdit ? /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: companyInputRef,\n        defaultValue: e.company\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 43\n      }, this) : e.company\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      onClick: onEditState,\n      children: isEdit ? /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: positionInputRef,\n        defaultValue: e.position\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 43\n      }, this) : e.position\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      onClick: onEditState,\n      style: {\n        display: 'flex'\n      },\n      children: [isEdit ? /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: startDateInputRef,\n        defaultValue: dateFormat(e.start_date),\n        type: \"date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 19\n      }, this) : e.start_date, \"-\", isEdit ? /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: endDateInputRef,\n        type: \"date\",\n        defaultValue: dateFormat(e.end_date)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 19\n      }, this) : e.end_date]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      onClick: () => onDeleteRow(e.id),\n      style: {\n        cursor: 'pointer'\n      },\n      children: isEdit ? /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 19\n      }, this) : /*#__PURE__*/_jsxDEV(DeleteOutlineIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 34\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(CareerRow, \"Dge2VGBcj4SIG56EsicfLJVxAU0=\");\n_c = CareerRow;\nexport default CareerRow;\nvar _c;\n$RefreshReg$(_c, \"CareerRow\");","map":{"version":3,"names":["DeleteOutlineIcon","EditIcon","useRef","useState","jsxDEV","_jsxDEV","CareerRow","props","_s","isEdit","setIsEdit","dateFormat","date","replace","e","career","checkedRowId","onSelect","onDeleteRow","onEditState","companyInputRef","positionInputRef","startDateInputRef","endDateInputRef","onEditClick","company","current","valeue","position","startDate","endDate","alert","children","type","checked","includes","id","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","ref","defaultValue","style","display","start_date","end_date","cursor","_c","$RefreshReg$"],"sources":["C:/Users/TED/Desktop/FrontClass/resource/react/test/src/components/career/careerRow.js"],"sourcesContent":["import DeleteOutlineIcon from '@mui/icons-material/DeleteOutline';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport { useRef, useState } from 'react';\r\n\r\nconst CareerRow = (props) => {\r\n  // 만일 isEdit에 true가 들어있으면 해당 행이 수정 상태임 을 의미하고\r\n  // isEdit에 false가 들어있으면 해당 행이 수정상태가 아님 을 의미한다\r\n  const [isEdit, setIsEdit] = useState(false);\r\n\r\n  const dateFormat = (date) => {\r\n    // '2023년10월01일' --> '2023-10-01'\r\n    // / /g --> 모든 띄어쓰기 공백 을 의미\r\n    return date.replace('년', '-').replace('월', '-').replace('일', '').replace(/ /g, '');\r\n  };\r\n\r\n  // props.career = e;\r\n  // props.checkedRowId\r\n  const e = props.career;\r\n  const { checkedRowId, onSelect, onDeleteRow } = props;\r\n\r\n  // 상태를 수정상태로 변경해주는 함수\r\n  const onEditState = () => {\r\n    setIsEdit(true);\r\n  };\r\n\r\n  const companyInputRef = useRef()\r\n  const positionInputRef = useRef()\r\n  const startDateInputRef = useRef()\r\n  const endDateInputRef = useRef()\r\n\r\n\r\n  const onEditClick = () => {\r\n    const company = companyInputRef.current.valeue;\r\n    const position = positionInputRef.current.valeue;\r\n    const startDate = startDateInputRef.current.valeue;\r\n    const endDate = endDateInputRef.current.valeue;\r\n\r\nif(company === '') {\r\n    alert('dsf');\r\n    return\r\n}\r\n\r\n  }\r\n\r\n\r\n  return (\r\n    <tr>\r\n      <td>\r\n        <input\r\n          type=\"checkbox\"\r\n          checked={checkedRowId.includes(e.id)}\r\n          onChange={() => {\r\n            onSelect(e.id);\r\n          }}\r\n        />\r\n      </td>\r\n      <td onClick={onEditState}>{isEdit ? <input ref={companyInputRef} defaultValue={e.company} /> : e.company}</td>\r\n      <td onClick={onEditState}>{isEdit ? <input ref={positionInputRef} defaultValue={e.position} /> : e.position}</td>\r\n      <td onClick={onEditState} style={{ display: 'flex' }}>\r\n        {isEdit ? <input ref={startDateInputRef} defaultValue={dateFormat(e.start_date)} type=\"date\" /> : e.start_date}-\r\n        {isEdit ? <input ref={endDateInputRef} type=\"date\" defaultValue={dateFormat(e.end_date)} /> : e.end_date}\r\n      </td>\r\n      <td\r\n        onClick={() => onDeleteRow(e.id)}\r\n        style={{\r\n          cursor: 'pointer',\r\n        }}\r\n      >\r\n        {isEdit ? <EditIcon /> : <DeleteOutlineIcon />}\r\n      </td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default CareerRow;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}